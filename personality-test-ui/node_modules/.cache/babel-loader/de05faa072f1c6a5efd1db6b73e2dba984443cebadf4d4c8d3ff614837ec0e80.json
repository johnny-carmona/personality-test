{"ast":null,"code":"var _jsxFileName = \"/Users/DizzyJ/projects/coding challenge /personality-test-ui/src/components/QuestionList/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport QuestionComponent from '../QuestionComponent';\nimport { fetchQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionList = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const loadQuestions = async () => {\n      try {\n        const response = await fetchQuestions();\n        setQuestions(response);\n      } catch (error) {\n        // Handle error\n      }\n    };\n    loadQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions.map(question => /*#__PURE__*/_jsxDEV(QuestionComponent, {\n      questionId: question.id,\n      questionText: question.question\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionList, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = QuestionList;\nexport default QuestionList;\nvar _c;\n$RefreshReg$(_c, \"QuestionList\");","map":{"version":3,"names":["React","useEffect","useState","QuestionComponent","fetchQuestions","jsxDEV","_jsxDEV","QuestionList","_s","questions","setQuestions","loadQuestions","response","error","children","map","question","questionId","id","questionText","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/DizzyJ/projects/coding challenge /personality-test-ui/src/components/QuestionList/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport QuestionComponent from '../QuestionComponent';\nimport { fetchQuestions } from '../api';\n\nconst QuestionList = () => {\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    const loadQuestions = async () => {\n      try {\n        const response = await fetchQuestions();\n        setQuestions(response);\n      } catch (error) {\n        // Handle error\n      }\n    };\n\n    loadQuestions();\n  }, []);\n\n  return (\n    <div>\n      {questions.map((question) => (\n        <QuestionComponent\n          key={question.id}\n          questionId={question.id}\n          questionText={question.question}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default QuestionList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,cAAc,CAAC,CAAC;QACvCM,YAAY,CAACE,QAAQ,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;MAAA;IAEJ,CAAC;IAEDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAQ,QAAA,EACGL,SAAS,CAACM,GAAG,CAAEC,QAAQ,iBACtBV,OAAA,CAACH,iBAAiB;MAEhBc,UAAU,EAAED,QAAQ,CAACE,EAAG;MACxBC,YAAY,EAAEH,QAAQ,CAACA;IAAS,GAF3BA,QAAQ,CAACE,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}