{"ast":null,"code":"var _jsxFileName = \"/Users/DizzyJ/projects/coding challenge /personality-test-ui/src/components/QuestionComponent/index.js\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red',\n            marginRight: '10px'\n          },\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-grow-1 justify-content-between\",\n          children: [1, 2, 3, 4, 5, 6, 7].map(degree => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"questionOption\",\n            id: `option${degree}`,\n            label: degree.toString(),\n            className: \"ml-2\"\n          }, degree, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green',\n            marginLeft: '10px'\n          },\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionComponent;\nexport default QuestionComponent;\nvar _c;\n$RefreshReg$(_c, \"QuestionComponent\");","map":{"version":3,"names":["React","Form","jsxDEV","_jsxDEV","QuestionComponent","children","Group","Label","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","marginRight","map","degree","Check","type","name","id","label","toString","marginLeft","_c","$RefreshReg$"],"sources":["/Users/DizzyJ/projects/coding challenge /personality-test-ui/src/components/QuestionComponent/index.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nconst QuestionComponent = () => {\n  return (\n    <div>\n      <Form.Group>\n        <Form.Label>Question:</Form.Label>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <span style={{ color: 'red', marginRight: '10px' }}>Disagree</span>\n          <div className=\"d-flex flex-grow-1 justify-content-between\">\n            {[1, 2, 3, 4, 5, 6, 7].map((degree) => (\n              <Form.Check\n                key={degree}\n                type=\"radio\"\n                name=\"questionOption\"\n                id={`option${degree}`}\n                label={degree.toString()}\n                className=\"ml-2\"\n              />\n            ))}\n          </div>\n          <span style={{ color: 'green', marginLeft: '10px' }}>Agree</span>\n        </div>\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default QuestionComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACF,IAAI,CAACK,KAAK;MAAAD,QAAA,gBACTF,OAAA,CAACF,IAAI,CAACM,KAAK;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAClCR,OAAA;QAAKS,SAAS,EAAC,mDAAmD;QAAAP,QAAA,gBAChEF,OAAA;UAAMU,KAAK,EAAE;YAAEC,KAAK,EAAE,KAAK;YAAEC,WAAW,EAAE;UAAO,CAAE;UAAAV,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnER,OAAA;UAAKS,SAAS,EAAC,4CAA4C;UAAAP,QAAA,EACxD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACW,GAAG,CAAEC,MAAM,iBAChCd,OAAA,CAACF,IAAI,CAACiB,KAAK;YAETC,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,gBAAgB;YACrBC,EAAE,EAAG,SAAQJ,MAAO,EAAE;YACtBK,KAAK,EAAEL,MAAM,CAACM,QAAQ,CAAC,CAAE;YACzBX,SAAS,EAAC;UAAM,GALXK,MAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMZ,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNR,OAAA;UAAMU,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEU,UAAU,EAAE;UAAO,CAAE;UAAAnB,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACc,EAAA,GAxBIrB,iBAAiB;AA0BvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}